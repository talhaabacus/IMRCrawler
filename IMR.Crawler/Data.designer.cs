#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMR.Crawler
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IMRCrawler")]
	public partial class IMRDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPDFFormat(PDFFormat instance);
    partial void UpdatePDFFormat(PDFFormat instance);
    partial void DeletePDFFormat(PDFFormat instance);
    partial void InsertTreatment(Treatment instance);
    partial void UpdateTreatment(Treatment instance);
    partial void DeleteTreatment(Treatment instance);
    partial void InsertPDFDetail(PDFDetail instance);
    partial void UpdatePDFDetail(PDFDetail instance);
    partial void DeletePDFDetail(PDFDetail instance);
    #endregion
		
		public IMRDataContext() : 
				base(global::IMR.Crawler.Properties.Settings.Default.IMRCrawlerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public IMRDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMRDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMRDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMRDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PDFFormat> PDFFormats
		{
			get
			{
				return this.GetTable<PDFFormat>();
			}
		}
		
		public System.Data.Linq.Table<Treatment> Treatments
		{
			get
			{
				return this.GetTable<Treatment>();
			}
		}
		
		public System.Data.Linq.Table<PDFDetail> PDFDetails
		{
			get
			{
				return this.GetTable<PDFDetail>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchCase")]
		public ISingleResult<SearchCaseResult> SearchCase([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchString", DbType="VarChar(200)")] string searchString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CaseNumber", DbType="VarChar(100)")] string caseNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), searchString, caseNumber);
			return ((ISingleResult<SearchCaseResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchCaseDetail")]
		public ISingleResult<SearchCaseDetailResult> SearchCaseDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Age", DbType="Int")] System.Nullable<int> age, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="VarChar(100)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="State", DbType="VarChar(200)")] string state, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Certifications", DbType="VarChar(300)")] string certifications, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Diagnosis", DbType="VarChar(300)")] string diagnosis)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), age, gender, state, certifications, diagnosis);
			return ((ISingleResult<SearchCaseDetailResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PDFFormats")]
	public partial class PDFFormat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PDFFormatID;
		
		private string _Name;
		
		private EntitySet<Treatment> _Treatments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPDFFormatIDChanging(int value);
    partial void OnPDFFormatIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PDFFormat()
		{
			this._Treatments = new EntitySet<Treatment>(new Action<Treatment>(this.attach_Treatments), new Action<Treatment>(this.detach_Treatments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDFFormatID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PDFFormatID
		{
			get
			{
				return this._PDFFormatID;
			}
			set
			{
				if ((this._PDFFormatID != value))
				{
					this.OnPDFFormatIDChanging(value);
					this.SendPropertyChanging();
					this._PDFFormatID = value;
					this.SendPropertyChanged("PDFFormatID");
					this.OnPDFFormatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PDFFormat_Treatment", Storage="_Treatments", ThisKey="PDFFormatID", OtherKey="PDFFormatID")]
		public EntitySet<Treatment> Treatments
		{
			get
			{
				return this._Treatments;
			}
			set
			{
				this._Treatments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Treatments(Treatment entity)
		{
			this.SendPropertyChanging();
			entity.PDFFormat = this;
		}
		
		private void detach_Treatments(Treatment entity)
		{
			this.SendPropertyChanging();
			entity.PDFFormat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Treatments")]
	public partial class Treatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TreatmentID;
		
		private string _PDFUrl;
		
		private string _CaseNumber;
		
		private string _CaseOutCome;
		
		private System.Nullable<System.DateTime> _DecisionDate;
		
		private System.Nullable<System.DateTime> _DateOfInjury;
		
		private System.Nullable<System.DateTime> _RecievedDate;
		
		private string _IMROSpeciality;
		
		private string _RequestCategory;
		
		private string _SubCategory;
		
		private string _RequestDecision;
		
		private string _ParentCaseNumber;
		
		private string _PDFText;
		
		private string _LocalPDFLoc;
		
		private System.Nullable<int> _PDFFormatID;
		
		private EntityRef<PDFDetail> _PDFDetail;
		
		private EntityRef<PDFFormat> _PDFFormat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTreatmentIDChanging(int value);
    partial void OnTreatmentIDChanged();
    partial void OnPDFUrlChanging(string value);
    partial void OnPDFUrlChanged();
    partial void OnCaseNumberChanging(string value);
    partial void OnCaseNumberChanged();
    partial void OnCaseOutComeChanging(string value);
    partial void OnCaseOutComeChanged();
    partial void OnDecisionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDecisionDateChanged();
    partial void OnDateOfInjuryChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfInjuryChanged();
    partial void OnRecievedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecievedDateChanged();
    partial void OnIMROSpecialityChanging(string value);
    partial void OnIMROSpecialityChanged();
    partial void OnRequestCategoryChanging(string value);
    partial void OnRequestCategoryChanged();
    partial void OnSubCategoryChanging(string value);
    partial void OnSubCategoryChanged();
    partial void OnRequestDecisionChanging(string value);
    partial void OnRequestDecisionChanged();
    partial void OnParentCaseNumberChanging(string value);
    partial void OnParentCaseNumberChanged();
    partial void OnPDFTextChanging(string value);
    partial void OnPDFTextChanged();
    partial void OnLocalPDFLocChanging(string value);
    partial void OnLocalPDFLocChanged();
    partial void OnPDFFormatIDChanging(System.Nullable<int> value);
    partial void OnPDFFormatIDChanged();
    #endregion
		
		public Treatment()
		{
			this._PDFDetail = default(EntityRef<PDFDetail>);
			this._PDFFormat = default(EntityRef<PDFFormat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TreatmentID
		{
			get
			{
				return this._TreatmentID;
			}
			set
			{
				if ((this._TreatmentID != value))
				{
					this.OnTreatmentIDChanging(value);
					this.SendPropertyChanging();
					this._TreatmentID = value;
					this.SendPropertyChanged("TreatmentID");
					this.OnTreatmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDFUrl", DbType="VarChar(200)")]
		public string PDFUrl
		{
			get
			{
				return this._PDFUrl;
			}
			set
			{
				if ((this._PDFUrl != value))
				{
					this.OnPDFUrlChanging(value);
					this.SendPropertyChanging();
					this._PDFUrl = value;
					this.SendPropertyChanged("PDFUrl");
					this.OnPDFUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CaseNumber
		{
			get
			{
				return this._CaseNumber;
			}
			set
			{
				if ((this._CaseNumber != value))
				{
					this.OnCaseNumberChanging(value);
					this.SendPropertyChanging();
					this._CaseNumber = value;
					this.SendPropertyChanged("CaseNumber");
					this.OnCaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseOutCome", DbType="VarChar(100)")]
		public string CaseOutCome
		{
			get
			{
				return this._CaseOutCome;
			}
			set
			{
				if ((this._CaseOutCome != value))
				{
					this.OnCaseOutComeChanging(value);
					this.SendPropertyChanging();
					this._CaseOutCome = value;
					this.SendPropertyChanged("CaseOutCome");
					this.OnCaseOutComeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DecisionDate
		{
			get
			{
				return this._DecisionDate;
			}
			set
			{
				if ((this._DecisionDate != value))
				{
					this.OnDecisionDateChanging(value);
					this.SendPropertyChanging();
					this._DecisionDate = value;
					this.SendPropertyChanged("DecisionDate");
					this.OnDecisionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfInjury", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfInjury
		{
			get
			{
				return this._DateOfInjury;
			}
			set
			{
				if ((this._DateOfInjury != value))
				{
					this.OnDateOfInjuryChanging(value);
					this.SendPropertyChanging();
					this._DateOfInjury = value;
					this.SendPropertyChanged("DateOfInjury");
					this.OnDateOfInjuryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecievedDate
		{
			get
			{
				return this._RecievedDate;
			}
			set
			{
				if ((this._RecievedDate != value))
				{
					this.OnRecievedDateChanging(value);
					this.SendPropertyChanging();
					this._RecievedDate = value;
					this.SendPropertyChanged("RecievedDate");
					this.OnRecievedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMROSpeciality", DbType="VarChar(200)")]
		public string IMROSpeciality
		{
			get
			{
				return this._IMROSpeciality;
			}
			set
			{
				if ((this._IMROSpeciality != value))
				{
					this.OnIMROSpecialityChanging(value);
					this.SendPropertyChanging();
					this._IMROSpeciality = value;
					this.SendPropertyChanged("IMROSpeciality");
					this.OnIMROSpecialityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestCategory", DbType="VarChar(100)")]
		public string RequestCategory
		{
			get
			{
				return this._RequestCategory;
			}
			set
			{
				if ((this._RequestCategory != value))
				{
					this.OnRequestCategoryChanging(value);
					this.SendPropertyChanging();
					this._RequestCategory = value;
					this.SendPropertyChanged("RequestCategory");
					this.OnRequestCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="VarChar(100)")]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this.OnSubCategoryChanging(value);
					this.SendPropertyChanging();
					this._SubCategory = value;
					this.SendPropertyChanged("SubCategory");
					this.OnSubCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDecision", DbType="VarChar(50)")]
		public string RequestDecision
		{
			get
			{
				return this._RequestDecision;
			}
			set
			{
				if ((this._RequestDecision != value))
				{
					this.OnRequestDecisionChanging(value);
					this.SendPropertyChanging();
					this._RequestDecision = value;
					this.SendPropertyChanged("RequestDecision");
					this.OnRequestDecisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCaseNumber", DbType="VarChar(50)")]
		public string ParentCaseNumber
		{
			get
			{
				return this._ParentCaseNumber;
			}
			set
			{
				if ((this._ParentCaseNumber != value))
				{
					this.OnParentCaseNumberChanging(value);
					this.SendPropertyChanging();
					this._ParentCaseNumber = value;
					this.SendPropertyChanged("ParentCaseNumber");
					this.OnParentCaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDFText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string PDFText
		{
			get
			{
				return this._PDFText;
			}
			set
			{
				if ((this._PDFText != value))
				{
					this.OnPDFTextChanging(value);
					this.SendPropertyChanging();
					this._PDFText = value;
					this.SendPropertyChanged("PDFText");
					this.OnPDFTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalPDFLoc", DbType="VarChar(200)")]
		public string LocalPDFLoc
		{
			get
			{
				return this._LocalPDFLoc;
			}
			set
			{
				if ((this._LocalPDFLoc != value))
				{
					this.OnLocalPDFLocChanging(value);
					this.SendPropertyChanging();
					this._LocalPDFLoc = value;
					this.SendPropertyChanged("LocalPDFLoc");
					this.OnLocalPDFLocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDFFormatID", DbType="Int")]
		public System.Nullable<int> PDFFormatID
		{
			get
			{
				return this._PDFFormatID;
			}
			set
			{
				if ((this._PDFFormatID != value))
				{
					if (this._PDFFormat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPDFFormatIDChanging(value);
					this.SendPropertyChanging();
					this._PDFFormatID = value;
					this.SendPropertyChanged("PDFFormatID");
					this.OnPDFFormatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Treatment_PDFDetail", Storage="_PDFDetail", ThisKey="TreatmentID", OtherKey="TreatmentID", IsUnique=true, IsForeignKey=false)]
		public PDFDetail PDFDetail
		{
			get
			{
				return this._PDFDetail.Entity;
			}
			set
			{
				PDFDetail previousValue = this._PDFDetail.Entity;
				if (((previousValue != value) 
							|| (this._PDFDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PDFDetail.Entity = null;
						previousValue.Treatment = null;
					}
					this._PDFDetail.Entity = value;
					if ((value != null))
					{
						value.Treatment = this;
					}
					this.SendPropertyChanged("PDFDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PDFFormat_Treatment", Storage="_PDFFormat", ThisKey="PDFFormatID", OtherKey="PDFFormatID", IsForeignKey=true)]
		public PDFFormat PDFFormat
		{
			get
			{
				return this._PDFFormat.Entity;
			}
			set
			{
				PDFFormat previousValue = this._PDFFormat.Entity;
				if (((previousValue != value) 
							|| (this._PDFFormat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PDFFormat.Entity = null;
						previousValue.Treatments.Remove(this);
					}
					this._PDFFormat.Entity = value;
					if ((value != null))
					{
						value.Treatments.Add(this);
						this._PDFFormatID = value.PDFFormatID;
					}
					else
					{
						this._PDFFormatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PDFFormat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PDFDetails")]
	public partial class PDFDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TreatmentID;
		
		private System.Nullable<System.DateTime> _DateAssigned;
		
		private System.Nullable<System.DateTime> _URDenialDate;
		
		private string _HowIMRDetermination;
		
		private string _ClinicalCaseSummary;
		
		private System.Nullable<int> _Age;
		
		private string _Gender;
		
		private string _Diagnosis;
		
		private string _IMRIssuesRationales;
		
		private string _StateofLicensure;
		
		private string _Certifications;
		
		private string _DocumentsReviewed;
		
		private string _IssueAtDispute;
		
		private string _TreatmentGuidelines;
		
		private string _ReviewerQualifications;
		
		private EntityRef<Treatment> _Treatment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTreatmentIDChanging(int value);
    partial void OnTreatmentIDChanged();
    partial void OnDateAssignedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAssignedChanged();
    partial void OnURDenialDateChanging(System.Nullable<System.DateTime> value);
    partial void OnURDenialDateChanged();
    partial void OnHowIMRDeterminationChanging(string value);
    partial void OnHowIMRDeterminationChanged();
    partial void OnClinicalCaseSummaryChanging(string value);
    partial void OnClinicalCaseSummaryChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnDiagnosisChanging(string value);
    partial void OnDiagnosisChanged();
    partial void OnIMRIssuesRationalesChanging(string value);
    partial void OnIMRIssuesRationalesChanged();
    partial void OnStateofLicensureChanging(string value);
    partial void OnStateofLicensureChanged();
    partial void OnCertificationsChanging(string value);
    partial void OnCertificationsChanged();
    partial void OnDocumentsReviewedChanging(string value);
    partial void OnDocumentsReviewedChanged();
    partial void OnIssueAtDisputeChanging(string value);
    partial void OnIssueAtDisputeChanged();
    partial void OnTreatmentGuidelinesChanging(string value);
    partial void OnTreatmentGuidelinesChanged();
    partial void OnReviewerQualificationsChanging(string value);
    partial void OnReviewerQualificationsChanged();
    #endregion
		
		public PDFDetail()
		{
			this._Treatment = default(EntityRef<Treatment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TreatmentID
		{
			get
			{
				return this._TreatmentID;
			}
			set
			{
				if ((this._TreatmentID != value))
				{
					if (this._Treatment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTreatmentIDChanging(value);
					this.SendPropertyChanging();
					this._TreatmentID = value;
					this.SendPropertyChanged("TreatmentID");
					this.OnTreatmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAssigned", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAssigned
		{
			get
			{
				return this._DateAssigned;
			}
			set
			{
				if ((this._DateAssigned != value))
				{
					this.OnDateAssignedChanging(value);
					this.SendPropertyChanging();
					this._DateAssigned = value;
					this.SendPropertyChanged("DateAssigned");
					this.OnDateAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URDenialDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> URDenialDate
		{
			get
			{
				return this._URDenialDate;
			}
			set
			{
				if ((this._URDenialDate != value))
				{
					this.OnURDenialDateChanging(value);
					this.SendPropertyChanging();
					this._URDenialDate = value;
					this.SendPropertyChanged("URDenialDate");
					this.OnURDenialDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowIMRDetermination", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HowIMRDetermination
		{
			get
			{
				return this._HowIMRDetermination;
			}
			set
			{
				if ((this._HowIMRDetermination != value))
				{
					this.OnHowIMRDeterminationChanging(value);
					this.SendPropertyChanging();
					this._HowIMRDetermination = value;
					this.SendPropertyChanged("HowIMRDetermination");
					this.OnHowIMRDeterminationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalCaseSummary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ClinicalCaseSummary
		{
			get
			{
				return this._ClinicalCaseSummary;
			}
			set
			{
				if ((this._ClinicalCaseSummary != value))
				{
					this.OnClinicalCaseSummaryChanging(value);
					this.SendPropertyChanging();
					this._ClinicalCaseSummary = value;
					this.SendPropertyChanged("ClinicalCaseSummary");
					this.OnClinicalCaseSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagnosis", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Diagnosis
		{
			get
			{
				return this._Diagnosis;
			}
			set
			{
				if ((this._Diagnosis != value))
				{
					this.OnDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._Diagnosis = value;
					this.SendPropertyChanged("Diagnosis");
					this.OnDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMRIssuesRationales", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string IMRIssuesRationales
		{
			get
			{
				return this._IMRIssuesRationales;
			}
			set
			{
				if ((this._IMRIssuesRationales != value))
				{
					this.OnIMRIssuesRationalesChanging(value);
					this.SendPropertyChanging();
					this._IMRIssuesRationales = value;
					this.SendPropertyChanged("IMRIssuesRationales");
					this.OnIMRIssuesRationalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateofLicensure", DbType="VarChar(200)")]
		public string StateofLicensure
		{
			get
			{
				return this._StateofLicensure;
			}
			set
			{
				if ((this._StateofLicensure != value))
				{
					this.OnStateofLicensureChanging(value);
					this.SendPropertyChanging();
					this._StateofLicensure = value;
					this.SendPropertyChanged("StateofLicensure");
					this.OnStateofLicensureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certifications", DbType="VarChar(200)")]
		public string Certifications
		{
			get
			{
				return this._Certifications;
			}
			set
			{
				if ((this._Certifications != value))
				{
					this.OnCertificationsChanging(value);
					this.SendPropertyChanging();
					this._Certifications = value;
					this.SendPropertyChanged("Certifications");
					this.OnCertificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentsReviewed", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DocumentsReviewed
		{
			get
			{
				return this._DocumentsReviewed;
			}
			set
			{
				if ((this._DocumentsReviewed != value))
				{
					this.OnDocumentsReviewedChanging(value);
					this.SendPropertyChanging();
					this._DocumentsReviewed = value;
					this.SendPropertyChanged("DocumentsReviewed");
					this.OnDocumentsReviewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueAtDispute", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string IssueAtDispute
		{
			get
			{
				return this._IssueAtDispute;
			}
			set
			{
				if ((this._IssueAtDispute != value))
				{
					this.OnIssueAtDisputeChanging(value);
					this.SendPropertyChanging();
					this._IssueAtDispute = value;
					this.SendPropertyChanged("IssueAtDispute");
					this.OnIssueAtDisputeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentGuidelines", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TreatmentGuidelines
		{
			get
			{
				return this._TreatmentGuidelines;
			}
			set
			{
				if ((this._TreatmentGuidelines != value))
				{
					this.OnTreatmentGuidelinesChanging(value);
					this.SendPropertyChanging();
					this._TreatmentGuidelines = value;
					this.SendPropertyChanged("TreatmentGuidelines");
					this.OnTreatmentGuidelinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewerQualifications", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ReviewerQualifications
		{
			get
			{
				return this._ReviewerQualifications;
			}
			set
			{
				if ((this._ReviewerQualifications != value))
				{
					this.OnReviewerQualificationsChanging(value);
					this.SendPropertyChanging();
					this._ReviewerQualifications = value;
					this.SendPropertyChanged("ReviewerQualifications");
					this.OnReviewerQualificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Treatment_PDFDetail", Storage="_Treatment", ThisKey="TreatmentID", OtherKey="TreatmentID", IsForeignKey=true)]
		public Treatment Treatment
		{
			get
			{
				return this._Treatment.Entity;
			}
			set
			{
				Treatment previousValue = this._Treatment.Entity;
				if (((previousValue != value) 
							|| (this._Treatment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Treatment.Entity = null;
						previousValue.PDFDetail = null;
					}
					this._Treatment.Entity = value;
					if ((value != null))
					{
						value.PDFDetail = this;
						this._TreatmentID = value.TreatmentID;
					}
					else
					{
						this._TreatmentID = default(int);
					}
					this.SendPropertyChanged("Treatment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SearchCaseResult
	{
		
		private int _TreatmentID;
		
		private string _CaseNumber;
		
		private string _CaseOutCome;
		
		private System.Nullable<System.DateTime> _DecisionDate;
		
		private System.Nullable<System.DateTime> _DateOfInjury;
		
		private System.Nullable<System.DateTime> _RecievedDate;
		
		private string _IMROSpeciality;
		
		private string _RequestCategory;
		
		private string _SubCategory;
		
		private string _RequestDecision;
		
		private string _LocalPDFLoc;
		
		private System.Nullable<int> _PDFFormatID;
		
		private string _ParentCaseNumber;
		
		public SearchCaseResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentID", DbType="Int NOT NULL")]
		public int TreatmentID
		{
			get
			{
				return this._TreatmentID;
			}
			set
			{
				if ((this._TreatmentID != value))
				{
					this._TreatmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CaseNumber
		{
			get
			{
				return this._CaseNumber;
			}
			set
			{
				if ((this._CaseNumber != value))
				{
					this._CaseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseOutCome", DbType="VarChar(100)")]
		public string CaseOutCome
		{
			get
			{
				return this._CaseOutCome;
			}
			set
			{
				if ((this._CaseOutCome != value))
				{
					this._CaseOutCome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DecisionDate
		{
			get
			{
				return this._DecisionDate;
			}
			set
			{
				if ((this._DecisionDate != value))
				{
					this._DecisionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfInjury", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfInjury
		{
			get
			{
				return this._DateOfInjury;
			}
			set
			{
				if ((this._DateOfInjury != value))
				{
					this._DateOfInjury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecievedDate
		{
			get
			{
				return this._RecievedDate;
			}
			set
			{
				if ((this._RecievedDate != value))
				{
					this._RecievedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMROSpeciality", DbType="VarChar(200)")]
		public string IMROSpeciality
		{
			get
			{
				return this._IMROSpeciality;
			}
			set
			{
				if ((this._IMROSpeciality != value))
				{
					this._IMROSpeciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestCategory", DbType="VarChar(100)")]
		public string RequestCategory
		{
			get
			{
				return this._RequestCategory;
			}
			set
			{
				if ((this._RequestCategory != value))
				{
					this._RequestCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="VarChar(100)")]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this._SubCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDecision", DbType="VarChar(50)")]
		public string RequestDecision
		{
			get
			{
				return this._RequestDecision;
			}
			set
			{
				if ((this._RequestDecision != value))
				{
					this._RequestDecision = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalPDFLoc", DbType="VarChar(200)")]
		public string LocalPDFLoc
		{
			get
			{
				return this._LocalPDFLoc;
			}
			set
			{
				if ((this._LocalPDFLoc != value))
				{
					this._LocalPDFLoc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDFFormatID", DbType="Int")]
		public System.Nullable<int> PDFFormatID
		{
			get
			{
				return this._PDFFormatID;
			}
			set
			{
				if ((this._PDFFormatID != value))
				{
					this._PDFFormatID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCaseNumber", DbType="VarChar(50)")]
		public string ParentCaseNumber
		{
			get
			{
				return this._ParentCaseNumber;
			}
			set
			{
				if ((this._ParentCaseNumber != value))
				{
					this._ParentCaseNumber = value;
				}
			}
		}
	}
	
	public partial class SearchCaseDetailResult
	{
		
		private int _TreatmentID;
		
		private string _CaseNumber;
		
		private string _CaseOutCome;
		
		private System.Nullable<System.DateTime> _DecisionDate;
		
		private System.Nullable<System.DateTime> _DateOfInjury;
		
		private System.Nullable<System.DateTime> _RecievedDate;
		
		private string _IMROSpeciality;
		
		private string _RequestCategory;
		
		private string _SubCategory;
		
		private string _RequestDecision;
		
		private string _LocalPDFLoc;
		
		private System.Nullable<int> _PDFFormatID;
		
		private string _ParentCaseNumber;
		
		public SearchCaseDetailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentID", DbType="Int NOT NULL")]
		public int TreatmentID
		{
			get
			{
				return this._TreatmentID;
			}
			set
			{
				if ((this._TreatmentID != value))
				{
					this._TreatmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CaseNumber
		{
			get
			{
				return this._CaseNumber;
			}
			set
			{
				if ((this._CaseNumber != value))
				{
					this._CaseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseOutCome", DbType="VarChar(100)")]
		public string CaseOutCome
		{
			get
			{
				return this._CaseOutCome;
			}
			set
			{
				if ((this._CaseOutCome != value))
				{
					this._CaseOutCome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DecisionDate
		{
			get
			{
				return this._DecisionDate;
			}
			set
			{
				if ((this._DecisionDate != value))
				{
					this._DecisionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfInjury", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfInjury
		{
			get
			{
				return this._DateOfInjury;
			}
			set
			{
				if ((this._DateOfInjury != value))
				{
					this._DateOfInjury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecievedDate
		{
			get
			{
				return this._RecievedDate;
			}
			set
			{
				if ((this._RecievedDate != value))
				{
					this._RecievedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMROSpeciality", DbType="VarChar(200)")]
		public string IMROSpeciality
		{
			get
			{
				return this._IMROSpeciality;
			}
			set
			{
				if ((this._IMROSpeciality != value))
				{
					this._IMROSpeciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestCategory", DbType="VarChar(100)")]
		public string RequestCategory
		{
			get
			{
				return this._RequestCategory;
			}
			set
			{
				if ((this._RequestCategory != value))
				{
					this._RequestCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="VarChar(100)")]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this._SubCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDecision", DbType="VarChar(50)")]
		public string RequestDecision
		{
			get
			{
				return this._RequestDecision;
			}
			set
			{
				if ((this._RequestDecision != value))
				{
					this._RequestDecision = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalPDFLoc", DbType="VarChar(200)")]
		public string LocalPDFLoc
		{
			get
			{
				return this._LocalPDFLoc;
			}
			set
			{
				if ((this._LocalPDFLoc != value))
				{
					this._LocalPDFLoc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDFFormatID", DbType="Int")]
		public System.Nullable<int> PDFFormatID
		{
			get
			{
				return this._PDFFormatID;
			}
			set
			{
				if ((this._PDFFormatID != value))
				{
					this._PDFFormatID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCaseNumber", DbType="VarChar(50)")]
		public string ParentCaseNumber
		{
			get
			{
				return this._ParentCaseNumber;
			}
			set
			{
				if ((this._ParentCaseNumber != value))
				{
					this._ParentCaseNumber = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
